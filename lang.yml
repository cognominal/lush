# top map has `tokens`, `modes`, `snippets`
# `tokentypes` will be ventilated into `tokens` of mode 

defaultTokens: &default
  Space:
    priority: 0
  NakedString:
    priority: 0
  Number:
    secable: true
    priority: 100
  Variable:
    priority: 100

mode:
  Sh:
    tokens:
      <<: *default
      # so far a string cannot be both a snippet and a keyword
      # or cycling is necessary
      SnippetKey:
        priority: 110
        instancesFun: ShsnippetKeylist
      ExprField:
        placeholder: expression placeholder
      BlockField:
        placeholder: block placeholder
      Sh.Keyword:
        instances: if|else|for|while
        priority: 200
        secable: true
      Path:
        secable: true
      InvalidPath:
        secable: true
      ValidPath:
        secable: true
      Sigil: {}
      Twigil: {}
      SigillessName: {}
      PromptChar: {}
      Sh.redirect:
        secable: true
      Sh.toExpr:
        secable: true
      Sh.builtin:
        secable: true
      Sh.commandName:
        secable: true
      js.program: {}
      js.ExpressionStatement: {}
      js.Literal: {}
  Expr:
    constrained: true
    tokens:
      <<: *default
# for now, just keys for sake of completion using shift-tab
# tab will be used for the expansion of snippeys 
snippets:
  sh:
    pif:
      what: postfix if statement
      expansion:
    rif:
      what: if statement

hilite:
  Sh.keyword: bold
  ValidPath: green
  InvalidPath: red
  NakedString: bgGray.white
  Number: blue
  Sh.commandName: italic
  Sh.builtin: bold.blue
  SnippetKey: bold.red

magicStr:
  shellMode:
    '&':
      type: Sh.background
    '(':
      type: Sh.toExpr
    '>':
      type: Sh.redirect
      nextToken: Path
    '>>':
      type: Sh.redirect
      nextToken: Path
