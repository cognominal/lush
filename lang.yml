# top map has `tokens`, `modes`, `snippets`
# `tokentypes` will be ventilated into `tokens` of mode 

defaultTokens: &default
  Space:
    priority: 0
    validator: true
  NakedString:
    priority: 0
  Number:
    secable: true
    priority: 100
  Variable:
    priority: 100
  StatementSnipField:
    priority: 100
  ExprSnipField:
    priority: 100
  SnippetTrigger:

mode:
  Sh:
    tokens:
      <<: *default
      # so far a string cannot be both a snippet and a keyword
      # or cycling is necessary

      SvelteField:
        placeholder: svelte placeholder
      ExprField:
        placeholder: expression placeholder
        mode: Expr
      BlockField:
        placeholder: block placeholder
      ShKeyword:
        instances: if|else|for|while
        priority: 500
        secable: true
      Folder:
        priority: 200
      TypeScriptSymbol:
        priority: 150
      Path:
      InvalidPath:
        secable: true
      ValidPath:
        secable: true
      Sigil: {}
      Twigil: {}
      SigillessName: {}
      PromptChar: {}
      ShRedirect:
        secable: true
      ShToExpr:
        secable: true
      ShBuiltin:
        secable: true
      ShCommandName:
        priority: 1000
      jsProgram: {}
      jsExpressionStatement: {}
      jsLiteral:  {}
  Expr:
    constrained: true
    tokens:
      <<: *default
  Svelte:
    constrained: true
    tokens:
      <<: *default

# for now, just keys for sake of completion using shift-tab
# tab will be used for the expansion of snippeys 
snippets:
  sh:
    pif:
      what: postfix if statement
      expansion:  
    rif:
      what: if statement
      expansion: ExprField
    x:
      what: expression
    sv:
      what: svelte code

hilite:
  Space: dim
  NakedString: white
  Number: blue
  Variable: cyan
  StatementSnipField: bold.magenta
  ExprSnipField: italic.magentaBright
  SnippetTrigger: underline.yellow
  ExprField: italic.cyan
  BlockField: italic.green
  ShKeyword: bold.green
  Folder: bold.yellow
  TypeScriptSymbol: italic.blue
  Path: underline.blue
  InvalidPath: bold.red
  ValidPath: bold.greenBright
  Sigil: bold.cyanBright
  Twigil: bold.magentaBright
  SigillessName: italic.white
  PromptChar: bold.white
  ShRedirect: bold.redBright
  ShToExpr: bold.yellowBright
  ShBuiltin: bold.blueBright
  ShCommandName: bold.cyan
  jsProgram: italic.gray
  jsExpressionStatement: italic.yellow
  jsLiteral: italic.greenBright

magicStr:
  shellMode:
    '&':
      type: Sh.background
    '(':
      type: Sh.toExpr
    '>':
      type: Sh.redirect
      nextToken: Path
    '>>':
      type: Sh.redirect
      nextToken: Path
